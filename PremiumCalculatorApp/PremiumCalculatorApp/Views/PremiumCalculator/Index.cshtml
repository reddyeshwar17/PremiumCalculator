@model PremiumCalculatorApp.Models.PremiumModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Calculate Premium</title>
</head>
<body>
    <style type="text/css">
        .lblRequired::after {
            content: "*";
            font-weight: bold;
            color: red;
        }
    </style>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/angular.min.js"></script>
    @*<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.9/angular.min.js"></script>*@

    <script type="text/javascript">

        var myApp = angular.module('myApp', []);
        myApp.controller('premCalcCtrl', ['$scope', '$window', '$http', function ($scope, $window, $http) {

            $scope.onChange = function () {
                var succssData;
                //var ngData = { ngVal: $scope.Premium };
                var viewModel = { Name: $scope.Name, Age: $scope.Age, Occupation: $scope.Occupation, SumInsured: $scope.SumInsured };
                var post = $http.post('/PremiumCalculator/CalculatePremium', { model: viewModel });
                post.success(function (data, status) {
                    succssData = data.Premium;
                    alert(data.Premium);
                });
                if (succssData == undefined)
                    alert("Please check and provide all mandatory fields");
            }
        }]);
    </script>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "PreCalcForm" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div ng-app="myApp" ng-controller="premCalcCtrl">
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 lblRequired" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control required", ng_model = "Name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2 lblRequired" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control required", ng_model = "Age" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2 lblRequired" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control required", ng_model = "DateOfBirth" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr>
                    <td>
                        @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-2 lblRequired" })
                    </td>
                    <td>
                        @Html.EnumDropDownListFor(model => model.Occupation, "Select occupation", new { @class = "form-control required", ng_change = "onChange()", ng_model = "Occupation", ng_disabled = "PreCalcForm.$invalid" })
                        @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.SumInsured, htmlAttributes: new { @class = "control-label col-md-2 lblRequired" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.SumInsured, new { htmlAttributes = new { @class = "form-control required", ng_model = "SumInsured", type = "number", placeholder = "$0.000" } })
                        @Html.ValidationMessageFor(model => model.SumInsured, "", new { @class = "text-danger" })
                    </td>
            </table>
        </div>
    }
</body>
</html>
